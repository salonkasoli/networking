1) Физический = представление данных
2) Канальный - передача данных между 2мя непосредственно подключенными устройствами
3) Сетевой - передача данных между сетями
4) Транспортный - задает надежность передачи (ТСП)
5) Сеансовый - организации сессий
6) Представительный  - кодирование файлов
7) Прикладной 


Кадры Ethernet:

Etherned (DIX) IEEE 802.3

Preamble(8byte) + MAC dest 6byte + MAC sourse 6byte + Type/Len 2 byte + Data 4byte + FContrlSumm



802.1D
learnign
flooding - отправили всем
forwarding - перенаправление в соотв с кам таблицей
filtering - не отправка кадра в порт откуда пришло
ageing(300sec)



802.1Q
VLAN - широковещательный домен 2го уровня.
Access port - принадлежит 1  VLAN через него передаются кадры одной VLAN
Trunk port - порт, через который передаются кадры нескольких VLAN
Trunk - канал между 2мя trunk port
Native VLAN - VLAN, кадры которой не имеют 802.1q тэгов.

Кадр:
после МАК источника добавляется TAG;
Ethernet type, PRIORITY (для QoS), c (что то для token ring), VLAN ID 


VTP (VLAN trunking protocol):
Не используется

Prams:
domen name
password
rev.

Server
transport
client
off

VTP pruning


DTP (dynamic trunking protocol):
On: always trunk
Describe: to neighboor
Auto: agree with neighboor
Off: never trunk



Private VLAN:
изолированные поддомены L2 домена
Порты:
Community - передавать и принимать кадры для P портов и Community
P (неразборчивый) - для любых VLAN
Isolate - только для P портов



Q-in-Q VLAN
Добавляется 2 тега 802.1Q. Один внутренний, другой внешний

Атаки на VLAN
1) !Не помещать компы в Native VLAN
2) Двойная инкапсуляция
3) Атака на DTP




Протокол STP:
Построить беспетлевую топологию

Идентификатор моста 8 байт:
2 байт приоритет
6 байт МАК

Стоимость маршрута:
скорость передачи данных

Идентификатор порта коммутатора:
Приоритет порта 4 бит
ИД интерфейса 12 бит

BPDU (bridge protocol data unit):
Кадры конфигурации 
	0х00
Кадры изменения топологии
	0х80
Кадры Ethernet
	Груповая рассылка
	Мак Адрес

Роли коммутаторов:
	Корневой мост - наименьший ИД моста
	назначенный мост - мост, у которого маршрут до корня имеет наименьшую стоимость
Роли портов:
	корневой порт - порт некорневого порта, через который самый дешевый путь к корневому мосту
	назначенный порт - порт, который ретранслирует данные
	неназначенный - в состоянии blocking
	выключенный - очевидненько

Состояния портов:
	Blocking - может только принимать кадры BPDU
	Listening - может их принимать и отправлять
	Learning - знает свою роль, отправлять и принимать кадры BPDU, изменять CAM таблицу
	Forwarding - перенаправляет кадры с данными
	Disabled - выключен
	
Алгоритм:
	Выбрать корневой мост
	выбор корневых портов на некорневых моста (путь вверх)
	выбор назначенных портов для каждого сегмента на некорневы мостах (путь вниз)
	остальные порты блокируем
	
Алгоритм принятия решений:
	Выбор наименьшего ИД корневого моста
	Выбор пути наименьшей стоимости к корневому мосту
	Выбор наименьшего ИД моста отправителя
	Выбор наименьшего ИД порта отправителя
	Выбор наименьшего ИД порта получателя


Отправляет TCN в корень, корень отправляет TCA


Portfast
Из blocking в forwarding сразу
Для комплюктеров

Uplinkfast
Несколько путей наверх, корневой отказал, быстро выбираем другой

Rootguard
Фиксация корня в сети

BPDU guard, BPDU filter
блокирует порт, если приходит BPDU

UDLD
Порты говорят друг другу свои имена, не перепутать приемник и передатчик


Cisco Per-VLAN ST (PVST)
STP для VLAN

Rapid STP
Root
Designated - назначенный
Alternate - Blocking, получаетс лучшие BPDU от другого моста (Следующий кандидат на root port)
Backup - Blockingполучает лучшие BPDU от того же моста (Следующий кандидат на роль Designated port)

Состояния портов:
Discarding (Disabled, Blocking, Listening)
Learning
Forwarding

Edge-Port = PortFast

Shared - half-duplex
P2P - duplex

STP НЕ НУЖОН. Cisco VSS, Cisco vPC



Агрегирование каналов
Увеличение пропускной способности
Обеспечение отказоустойчивости
Балансировка нагрузки

hash от mac/ip -> destination port

************************************************************

Протокол IP (datagram)
Между разными сетями
Протокол типа BestEffort

IPv4 (32 bit)
IPv6 (128 bit)

Datagram - кождый пакет содержит адрес назначение и передается независимо от других
Универсальная адресация
Не зависит от нижлежащих уровней
Без установления соединений

Функции IP:
Адресация
Инкапсуляция
Маршрутизация
Фрагментация
Защита от петель
Защита от доставки по неверному адресу


Структура заголовка (Формат дейтаграммы)
20 байт заголовок:
1 байт - Версия, длина заголовка (т.к. бывают опции в заголовке)
1 байт - Type Of Service (механизмы QoS) (Precedence (число, как обрабатывать пакет. типо приоритет), delay, Throughput, Reliability, reserved)
2 byte - Total lenght (длина всего)
2 byte - identification (число)
2 byte - Flags (dont fragment), Fragment offset (смещение от начала фрагментации (1 пакет, 2 пакет))
1 byte - TTL (0-255)
1 byte - Protocol (TCP, UDP)
2 byte - Header Checksum
4 byte - Sourse addres
4 byte - Destination addres
0-40 byte byte - Options
 - Data
 
Структура IPv4 адреса
2,5 байта NetworkID
1,5 байте HostID

Схемы адресации:

Классовая адресация
A,B,C,D,E
HostID -> SubnetID + HostID

Маска подсетей - вектор 4 байта, 1 - идентификатор сети и подсети, 0 - идентификатор хоста
Стандартные маски:
255.0.0.0 Класс А
255.255.0.0 Класс В
255.255.255.0 Класс С

Вычисляется адрес: IP U MASK = NetworkID


Адресация подсетей

Бескласовая CIDR
То же что и классовая, но на классы плевать.
/8 /16 /24 /32 - Адрес сети

Специалньый адреса
10.0.0.0/8
172.16.0.0/12 
192.168.0.0/16 Private-USE Networks
127.0.0.0/8 Loopback

************************************************************

IP Фрагментация
MTU максимальный размер данных, которы можно передать на уровне


Фрагментация:
устанавливаем флаг MF = 1 у всех пакетов кроме последнего (Если фрагментируем пакет, у которого MF=1, то у последнего MF=1)
Каждому пакету ставим Offset = DataLen * 8 + OffsetOfPreviosIPPacket

IP Options
можно указать путь по которому идти
OptionType OptionLen OptionData

************************************************************

ICMP
TYPE CODE CHECKSUM

ICMPv4 Redirect
Type = 5
CODE:
	code 0 перенаправление сети
	code 1 перенаправление для хоста
	code 2 для типа сервиса и сети
	code 3 для типа сервиса и хоста
Internet adress
Original IP Datagram

ICMPv4 Echo and Reply
TYPE = 8, 0
Code = 0
Identifier = номер процесса ОС
Sequence Number = какой по очереди пинг

ICMPv4 Timestamp
Type = 13, 14
code 0
Identifier, Sequence Number
Original Ts
Recieve Ts
Transmit Ts


ICMPv4 Addres Mask Request
Type = 17, 18

ICMPv4 Time Exceeded
Type = 11
Code (Timer Type)
Original IP Datagram Portion
Это если TTL кончился у пакета

ICMPv4 Destination Unreacheable
Type 3

ICMPv4 Parameter Problem
Type = 11



******************************************************
Протокол ARP

Adress resolution protocol
I am device A and I have device B's IP, device B please tell me your hardware address

Кадр
HardwareType
Protocol Type
Hardware Addreddress lenght
Protocol Address lenght
Opcode - Что это? request, reply
SenderHardwareAddress
Sender Protocol ID
TargetHardwareAddress
Target Protocol ID

Proxy-ARP
Маршрутизотор посередине отправляет свой MAC на ARP запросы к своим детям

RARP
Reverse Address Resolution Protocol

************************************************************

Маршрутизация

Процесс перемещения датаграмм от источника к приемнику по сети

- Flooding
- Source routing
- Forwarding table

Маршрутизируемые протоколы
IP, IPX

Протоколы маршрутизации 
RIP OSPF BGP IS-IS EIGRP

Маршрутизаор - сетевое устройство, ретранслирующее датаграммы в нужном направлении

Виды:
	Аппаратные
	программные
	программно-аппаратные


Hop-by-hop - маршрутизатор знает cdтолько следующий узел доставки дейтаграмы

************************************************************


Источники:
	непосредственно подключенные
	статические
	протоколы маршрутизации
	
IP routing table - результаты выборов из всех протоколов маршрутизации
IP forwarding table - адреса next-hop и о загловке 2 уровня

Алгоритм Longest Prefix Match
	1 Найти записи таблицы где IP & M(j) == D(j) m - mask, d - dest
	2 Выбрать самое длинное совпадение маски, отправить туда
	
	
Схема обработки пакета
	Проверка контрольной суммы
	Уменьшить ТТЛ
	Вычислить контрольную сумму
	Проверить ТТЛ
	Поиск назначения в лаблице маршрутилазции LPM
	Генерация Л2 заголовка, отправка пакета

Методы коммутации
	Process switch
	Fast switching
	Cisco Express Forwarding
	
Process switching
	В тупую работает по алгоритму обработки пакета.
	
Fast switching
	Тот же process switching, только с кэшем маршрутов (заголовков 2 уровня), не нужно каждый раз делаь LPM
	
CEF
	Forwarding information Base - содержит все маршруты из routing table и синхронизируется постоянно. Каждый адрес ссылается на элемент adjacent table
	Adjacency table (таблица соседей) - инфа для заголовков 2 уровня
	
Механизм ECMP
	Метод маршрутизации по путям одинаковой стоимости
	Берется хэш от данных, которые мы зададим и по этому значению найдем адрес в таблице
	
	
